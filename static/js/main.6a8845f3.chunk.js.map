{"version":3,"sources":["components/images/Arya.jpg","components/images/Bran.png","components/images/Cersei.png","components/images/daenerys.jpg","components/images/Hound.png","components/images/Jon.png","components/images/Samwell.jpg","components/images/Sansa.jpg","components/images/Theon.jpg","components/images/Tormund.png","components/images/Tyrion.jpg","components/images/Varys.png","components/images/walkers.jpg","logo.svg","components/navbar/dumbs/Title.js","components/navbar/dumbs/Message.js","components/navbar/dumbs/Score.js","components/navbar/Navbar.js","components/info/Info.js","components/game/dumbs/Card.js","components/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","props","react_default","a","createElement","className","href","Message","message","Score","score","topScore","Navbar","style","zIndex","background","dumbs_Title","dumbs_Message","this","dumbs_Score","Component","Info","maxWidth","color","Card","onClick","width","height","maxHeight","overflow","src","imgLink","alt","objectFit","Game","state","cards","Arya","Bran","Cersei","Daenerys","Hound","Jon","Samwell","Sansa","Theon","Tormund","Tyrion","Varys","clicked","shuffle","i","length","j","Math","floor","random","_ref","handleCardSelect","_callee","event","selected","regenerator_default","wrap","_context","prev","next","target","getAttribute","_this","includes","setState","prevState","Object","toConsumableArray","concat","nextTurn","stop","_callee2","_context2","_this2","backgroundImage","Walkers","backgroundSize","map","card","dumbs_Card","key","App","localStorage","getItem","result","setItem","navbar_Navbar","info_Info","game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+LCMzBC,eAJD,SAAAC,GAAK,OACfC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAIJ,EAAAC,EAAAC,cAAA,gCCG1BG,EAJC,SAAAN,GAAK,OACjBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMO,UCGvBC,EAJD,SAAAR,GAAK,OACfC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,UAAmCJ,EAAMS,MAAzC,iBAA8DT,EAAMU,WCuBzDC,mLAlBP,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+EAA+EQ,MAAO,CAACC,OAAO,EAAGC,WAAW,YACvHb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACY,EAAD,OAEJd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACa,EAAD,CAAST,QAAWU,KAAKjB,MAAMO,WAEnCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACe,EAAD,CAAOT,MAAOQ,KAAKjB,MAAMS,MAAOC,SAAYO,KAAKjB,MAAMU,qBAb1DS,aCQNC,EAXF,SAAApB,GAAK,OACdC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BQ,MAAO,CAAES,SAAU,OAAQP,WAAW,YAC7Eb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeQ,MAAO,CAACU,MAAM,YAA3C,oBACArB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAgBQ,MAAO,CAACU,MAAM,YAA5C,sHCKDC,EAVF,SAAAvB,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKqB,QAASxB,EAAMwB,QAASpB,UAAU,2BAA0BQ,MAAO,CAAEa,MAAO,QAASC,OAAQ,UAC9FzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUQ,MAAO,CAAEa,MAAO,QAASC,OAAQ,QAASL,SAAU,QAASM,UAAW,QAASC,SAAU,WAChH3B,EAAAC,EAAAC,cAAA,OAAK0B,IAAK7B,EAAM8B,QAASC,IAAI,MAAM3B,UAAU,mBAAmBQ,MAAO,CAAEa,MAAO,QAASC,OAAQ,QAASM,UAAW,4OC0EtHC,6MA3DXC,MAAQ,CACJC,MAAO,CACHC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAEJC,QAAS,MAMbC,QAAU,SAAC/C,GACP,IAAK,IAAIgD,EAAIhD,EAAEiD,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADPM,EAEpB,CAACtD,EAAEkD,GAAIlD,EAAEgD,IAAvBhD,EAAEgD,GAFgCM,EAAA,GAE5BtD,EAAEkD,GAF0BI,EAAA,GAIvC,OAAOtD,KAEXuD,uDAAmB,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAA3D,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXL,EAAWD,EAAMO,OAAOC,aAAa,QAErCC,EAAKlC,MAAMc,QAAQqB,SAAST,GAHjB,CAAAG,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAILG,EAAKE,SAAS,CAAEtB,QAAS,KAJpB,OAKXoB,EAAKpE,MAAMS,MAAM,SALNsD,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAQLG,EAAKE,SAAS,SAAAC,GAAS,MAAK,CAAEvB,QAAQwB,OAAAC,EAAA,EAAAD,CAAKD,EAAUvB,SAAhB0B,OAAA,CAAyBd,OARzD,OASXQ,EAAKpE,MAAMS,MAAM,WATN,QAWf2D,EAAKO,WAXU,yBAAAZ,EAAAa,SAAAlB,EAAAzC,iEAanB0D,8BAAW,SAAAE,IAAA,OAAAhB,EAAA3D,EAAA4D,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACDG,EAAKE,SAAS,CAAEnC,MAAOiC,EAAKnB,QAAQmB,EAAKlC,MAAMC,SAD9C,wBAAA2C,EAAAF,SAAAC,EAAA5D,4FAvBPA,KAAK0D,4CA0BA,IAAAI,EAAA9D,KACL,OACIhB,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CACRoE,gBAAe,OAAAN,OAASO,IAAT,KAAqBC,eAAgB,UAEpDjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACVa,KAAKiB,MAAMC,MAAMgD,IAAI,SAACC,EAAMlC,GAAP,OAAajD,EAAAC,EAAAC,cAACkF,EAAD,CAAMvD,QAASsD,EAAME,IAAKpC,EAAG1B,QAASuD,EAAKtB,+BApDnFtC,aCgBJoE,6MA5BbrD,MAAQ,CACNzB,MAAO,EACPC,SAAU8E,aAAaC,QAAQ,aAAe,EAC9ClF,QAAS,kDAEXE,4CAAQ,SAAAiD,EAAMgC,GAAN,OAAA7B,EAAA3D,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAES,YAAXyB,EAFE,CAAA3B,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGEG,EAAKE,SAAS,CAAE7D,MAAO2D,EAAKlC,MAAMzB,MAAQ,EAAGF,QAAS,2BAHxD,OAIA6D,EAAKlC,MAAMzB,MAAQ2D,EAAKlC,MAAMxB,WAChC0D,EAAKE,SAAS,CAAE5D,SAAU0D,EAAKlC,MAAMzB,QACrC+E,aAAaG,QAAQ,WAAYvB,EAAKlC,MAAMzB,QAN1CsD,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EASEG,EAAKE,SAAS,CAAE7D,MAAO,EAAGF,QAAS,6BATrC,+BAAAwD,EAAAa,SAAAlB,EAAAzC,uIAaN,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyF,EAAW3E,KAAKiB,OACjBjC,EAAAC,EAAAC,cAAC0F,EAAD,MACA5F,EAAAC,EAAAC,cAAC2F,EAAD,CAAMrF,MAAOQ,KAAKR,gBAvBRU,aCKE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6a8845f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arya.3f058f6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bran.3c5f79f7.png\";","module.exports = __webpack_public_path__ + \"static/media/Cersei.7ebe7115.png\";","module.exports = __webpack_public_path__ + \"static/media/daenerys.f6a53eb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Hound.72638dff.png\";","module.exports = __webpack_public_path__ + \"static/media/Jon.94e62bfe.png\";","module.exports = __webpack_public_path__ + \"static/media/Samwell.a8133dfd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sansa.18c00ed5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Theon.73f910e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Tormund.8ff41675.png\";","module.exports = __webpack_public_path__ + \"static/media/Tyrion.a883ae70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Varys.467ed8bb.png\";","module.exports = __webpack_public_path__ + \"static/media/walkers.873bcfd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nconst Title = props =>(\n    <a className=\"navbar-brand\" href=\"#\"><h3>Game of Murders</h3></a>\n);\n\nexport default Title;","import React from \"react\";\n\nconst Message = props =>(\n    <h4 className=\"text-light\">{props.message}</h4>\n);\n\nexport default Message","import React from \"react\";\n\nconst Score = props =>(\n    <h3 className=\"text-light\">Score: {props.score} | Top Score: {props.topScore}</h3>\n);\n\nexport default Score;","import React, { Component } from \"react\";\nimport Title from \"./dumbs/Title.js\";\nimport Message from \"./dumbs/Message.js\";\nimport Score from \"./dumbs/Score.js\";\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <div className=\"navbar fixed-top navbar-expand-lg navbar-dark border-bottom border-light p-3\" style={{zIndex:2, background:'#792427'}}>\n                <div className=\"row w-100\">\n                    <div className=\"col-4 text-left\">\n                        <Title />\n                    </div>\n                    <div className=\"col-4 text-center\">\n                        <Message message = {this.props.message}/>\n                    </div>\n                    <div className=\"col-4 text-right\">\n                        <Score score={this.props.score} topScore = {this.props.topScore}  />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Navbar;","import React from \"react\";\n\nconst Info = props => (\n    <div>\n        <div className=\"container pt-5 mt-5 w-100\" style={{ maxWidth: \"100%\", background:'#D1BDA2'}}>\n            <div className=\" py-5 p-0 m-0 w-100\" >\n                <h1 className=\" text-center\" style={{color:\"#545058\"}}>Game Of Murders!</h1>\n                <h3 className=\" text-center\"  style={{color:\"#545058\"}}>Click on an image to kill that character! Don't kill them twice, otherwise they will become walkers...</h3>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Info","import React from \"react\";\n\nconst Card = props => (\n    <div className=\"col-3 text-center\">\n        <div onClick={props.onClick} className=\" m-3 card characterCard \"style={{ width: \"160px\", height: \"160px\"}} >\n            <div className=\"m-auto \" style={{ width: \"150px\", height: \"150px\", maxWidth: \"150px\", maxHeight: \"150px\", overflow: \"hidden\" }}>\n                <img src={props.imgLink} alt=\"...\" className=\"img-fluid m-auto\" style={{ width: \"150px\", height: \"250px\", objectFit: \"cover\" }} />\n            </div>\n        </div>\n    </div >\n);\n\nexport default Card","import React, { Component } from \"react\";\nimport Card from \"./dumbs/Card.js\";\nimport Navbar from \"../navbar\";\n\nimport Arya from \"../images/Arya.jpg\"\nimport Bran from \"../images/Bran.png\"\nimport Cersei from \"../images/Cersei.png\"\nimport Daenerys from \"../images/daenerys.jpg\"\nimport Hound from \"../images/Hound.png\"\nimport Jon from \"../images/Jon.png\"\nimport Samwell from \"../images/Samwell.jpg\"\nimport Sansa from \"../images/Sansa.jpg\"\nimport Theon from \"../images/Theon.jpg\"\nimport Tormund from \"../images/Tormund.png\"\nimport Tyrion from \"../images/Tyrion.jpg\"\nimport Varys from \"../images/Varys.png\"\n\nimport Walkers from \"../images/walkers.jpg\"\n\n\nclass Game extends Component {\n    state = {\n        cards: [\n            Arya,\n            Bran,\n            Cersei,\n            Daenerys,\n            Hound,\n            Jon,\n            Samwell,\n            Sansa,\n            Theon,\n            Tormund,\n            Tyrion,\n            Varys\n        ],\n        clicked: []\n    };\n    componentDidMount() {\n        this.nextTurn();\n    }\n\n    shuffle = (a) => {\n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    }\n    handleCardSelect = async event => {\n        let selected = event.target.getAttribute(\"src\");\n\n        if (this.state.clicked.includes(selected)) {\n            await this.setState({ clicked: [] })\n            this.props.score(\"Wrong\")\n        }\n        else {\n            await this.setState(prevState => ({ clicked: [...prevState.clicked, selected] }))\n            this.props.score(\"Correct\")\n        }\n        this.nextTurn();\n    };\n    nextTurn = async () => {\n        await this.setState({ cards: this.shuffle(this.state.cards) });\n    };\n    render() {\n        return (\n            <div style={{\n                backgroundImage: `url(${Walkers})`, backgroundSize: 'cover',\n            }}>\n                <div className=\"container text-center\">\n                    <div className=\"row w-75 m-auto text-center\">\n                        {this.state.cards.map((card, i) => <Card imgLink={card} key={i} onClick={this.handleCardSelect} />)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Game;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./components/navbar\";\nimport Info from \"./components/info/Info\";\nimport Game from \"./components/game\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topScore: localStorage.getItem(\"topScore\") || 0,\n    message: \"Begin by killing off your first character...\"\n  };\n  score = async result => {\n\n    if (result === \"Correct\") {\n      await this.setState({ score: this.state.score + 1, message: \"You Guessed Correctly!\" })\n      if (this.state.score > this.state.topScore) {\n        this.setState({ topScore: this.state.score })\n        localStorage.setItem(\"topScore\", this.state.score)\n      }\n    } else {\n      await this.setState({ score: 0, message: \"You Guessed Incorrectly!\" })\n    };\n  };\n  render() {\n    return (\n      <div>\n        <Navbar {...this.state}/>\n        <Info />\n        <Game score={this.score} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}